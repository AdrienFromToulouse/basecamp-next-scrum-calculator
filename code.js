// Generated by CoffeeScript 1.3.3
(function() {
  var ScrumCalculator,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  ScrumCalculator = (function() {

    ScrumCalculator.prototype.overallTotal = 0;

    function ScrumCalculator() {
      this.buildTotalListItem = __bind(this.buildTotalListItem, this);

      this.buildList = __bind(this.buildList, this);

      this.buildContainer = __bind(this.buildContainer, this);

      this.attachClickHandler = __bind(this.attachClickHandler, this);

      this.buildListItem = __bind(this.buildListItem, this);

      this.parsedTodoItem = __bind(this.parsedTodoItem, this);

      this.todoItems = __bind(this.todoItems, this);

      this.parsedBudget = __bind(this.parsedBudget, this);

      this.todoLists = __bind(this.todoLists, this);

      var _this = this;
      this.buildContainer();
      this.buildList();
      this.todoLists().each(function(i, list) {
        var listBudget, listItem, listTotal, missingEstimations;
        listTotal = 0;
        listBudget = _this.parsedBudget(list);
        missingEstimations = 0;
        _this.todoItems(list).each(function(i, item) {
          var total;
          total = _this.parsedTodoItem(item);
          if (total) {
            return listTotal += total;
          } else {
            return missingEstimations += 1;
          }
        });
        listItem = _this.buildListItem(list, listTotal, listBudget, missingEstimations);
        _this.attachClickHandler(listItem, list);
        return _this.overallTotal += listTotal;
      });
      this.buildTotalListItem();
    }

    ScrumCalculator.prototype.todoLists = function() {
      return $('span.unlinked_title');
    };

    ScrumCalculator.prototype.parsedBudget = function(list) {
      var result;
      result = $(list).text().match(/([0-9.]+)h$/);
      if (!result) {
        return;
      }
      return parseFloat(result[1]);
    };

    ScrumCalculator.prototype.todoItems = function(list) {
      return $(list).closest('article.todolist').find('li.todo');
    };

    ScrumCalculator.prototype.parsedTodoItem = function(item) {
      var result, todo;
      todo = $(item).find('span.content_for_perma').text();
      result = todo.match(/([0-9.]+)h$/);
      if (!result) {
        return;
      }
      return parseFloat(result[1]);
    };

    ScrumCalculator.prototype.buildListItem = function(list, listTotal, listBudget, missingEstimations) {
      var item, titleText;
      item = $('<li>').css('border-bottom', '1px solid #ddd').css('padding', '0px 0px 5px 0px').css('cursor', 'pointer');
      if (listBudget) {
        titleText = $(list).text().replace(/[\s-]+([0-9.]+)h$/, '');
        titleText += ' - ' + listBudget + 'h / <strong>' + listTotal + 'h</strong>';
        if (listTotal > listBudget) {
          item.css('color', 'red');
        } else {
          item.css('color', 'green');
        }
      } else {
        titleText = $(list).text() + ' - <strong>' + listTotal + 'h</strong>';
        item.css('color', '#888');
      }
      item.html(titleText + '<br/>');
      if (missingEstimations > 0 && listTotal > 0.0) {
        item.append($('<small>').text(missingEstimations + ' nicht geschätzt').css('color', '#AAA'));
      }
      this.list.append(item);
      return item;
    };

    ScrumCalculator.prototype.attachClickHandler = function(listItem, list) {
      var _this = this;
      return $(listItem).click(function() {
        return location.hash = $(list).closest('article.todolist').attr('id');
      });
    };

    ScrumCalculator.prototype.buildContainer = function() {
      if ($('body').find('#calculation').length > 0) {
        this.container = $('body').find('#calculation');
        this.container.empty();
      } else {
        this.container = $('<div>').attr('id', 'calculation');
        $('body').append(this.container);
      }
      this.container.css('position', 'fixed').css('z-index', '1000').css('top', '50px').css('right', '50px').css('padding', '20px').addClass('sheet');
      this.container.append($('<h2>').text('Übersicht').css('margin-top', '0').css('padding-bottom', '10px'));
      return this.container;
    };

    ScrumCalculator.prototype.buildList = function() {
      this.list = $('<ul>').css('margin', '0');
      return this.container.append(this.list);
    };

    ScrumCalculator.prototype.buildTotalListItem = function() {
      var close, item,
        _this = this;
      item = $('<li>').css('padding', '20px 0px 0px 0px').css('margin', '0');
      item.html('<strong>Total: ' + this.overallTotal + 'h</strong>');
      close = $('<a>').text('Schliessen').css('float', 'right').css('color', '#AAA').css('cursor', 'pointer').click(function() {
        return _this.container.remove();
      });
      item.append($('<small>').append(close));
      return this.list.append(item);
    };

    return ScrumCalculator;

  })();

  new ScrumCalculator();

}).call(this);
